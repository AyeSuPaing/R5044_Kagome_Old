@*
=========================================================================================================
  Module      : パーツ管理 メイン画面(Main.cshtml)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2019 All Rights Reserved.
=========================================================================================================
*@

@using w2.App.Common.Design
@using w2.Cms.Manager.Codes
@using w2.Cms.Manager.Codes.PageDesign
@model w2.Cms.Manager.ViewModels.PartsDesign.MainViewModel
@{
	ViewBag.Title = "パーツ管理";
	Layout = Constants.LAYOUT_PATH_DEFAULT;
}

<h1 class="page-title">パーツ管理</h1>
<div class="main-content-frame">
	<a href="javascript:void(0)" class="list-menu-btn">
		<span class="icon icon-menu"></span>
	</a>
	<div class="main-content-list">
		@using (Html.BeginForm("", "", new
		{
		}, FormMethod.Post, new
		{
			Id = "search_form",
			Onsubmit = "return false;"
		}))
		{
			<div class="list-tools">
				<div class="list-tools-row">
					<div class="list-tools-col ta-left">
						<div class="keyword-search">
							@Html.TextBoxFor(model => model.ParamModel.Keyword, new
							{
								Id = "search_keyword",
								Name = "ParamModel.Keyword",
								Class = "keyword-search-input",
								Placeholder = "管理用パーツ名、ファイル名"
							})
							<a href="javascript:group_list_redraw()" class="keyword-search-submit">
								<span class="icon-search"></span>
							</a>
						</div>
						<a class="btn-toggle" data-toggle-content-selector=".list-tools-detailed-search"></a>
					</div>

					<div class="list-tools-col ta-right">
						@Html.DropDownList("StandardPartsItems", Model.StandardPartsItems, new
						{
							Id = "standard_parts_list",
							Class = "hide-list-detail"
						})
						<button class="btn btn-main btn-size-m" type="button" onclick="open_new_custom_parts()">
							<span class="icon icon-plus" title="カスタムページを新規に作成します"></span><span class="hide-list-detail" title="カスタムページを新規に作成します">新規作成</span>
						</button>
					</div>
				</div>
				<div class="list-tools-detailed-search" style="display: none;">
					<div class="list-tools-row">
						<div class="list-tools-col">

							<div class="form-element-group form-element-group-vertical">
								<div class="form-element-group-title">
									<label for="form-select-005">グループ</label>
								</div>
								<div class="form-element-group-content">
									@Html.DropDownListFor(m => m.ParamModel.GroupId, Model.GroupItems, new
									{
										Id = "group_list",
										Name = "ParamModel.GroupId",
										Onchange = "Javascript: group_list_redraw();",
									})
								</div>
							</div>
							<div class="form-element-group form-element-group-vertical">
								<div class="form-element-group-title">
									<label>タイプ</label>
								</div>
								<div class="form-element-group-content">
									@for (var i = 0; i < Model.ParamModel.Types.Length; i++)
									{
										var id = "type_" + i;
										var name = "Types[" + i + "].IsSelected";
										<input class="btn-checkbox"
												id="@id"
												name="@name",
												data-val="true"
												data-val-required="IsSelected フィールドが必要です。"
												onchange="Javascript: group_list_redraw();"
												type="checkbox"
												value="true" checked>
										@Html.Label("type_" + i, Model.ParamModel.Types[i].Name, new
										{
											Class = "btn btn-size-m"
										})
										@Html.HiddenFor(m => Model.ParamModel.Types[i].Name, new
										{
											Name = "Types[" + i + "].Name"
										})
										@Html.HiddenFor(m => Model.ParamModel.Types[i].Value, new
										{
											Name = "Types[" + i + "].Value"
										})
									}
								</div>
							</div>
							<div class="form-element-group form-element-group-vertical">
								<div class="form-element-group-title">
									<label for="form-select-005">サイト</label>
								</div>
								<div class="form-element-group-content">
									@Html.DropDownListFor(m => m.ParamModel.UseType, Model.UseTypes, "", new
									{
										Name = "ParamModel.UseType",
										onchange = "group_list_redraw()"
									})
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		}

		<div class="list">
			<div class="list-head">
				<div class="list-head-row">
					<div class="list-head-col ta-left">
						@LayoutHelper.ListOpenToggleBtn()
						<div class="list-style-switch">
							<div class="list-style-switch-inner">
								<input type="radio" name="list-style" id="list-style-1" value="thumb" checked="">
								<label for="list-style-1" class="btn-switch">
									<span class="icon icon-thumbnail"></span><span class="label hide-list-detail">サムネイル</span>
								</label>
								<input type="radio" name="list-style" id="list-style-2" value="list">
								<label for="list-style-2" class="btn-switch">
									<span class="icon icon-list"></span><span class="label hide-list-detail">リスト</span>
								</label>
							</div>
						</div>
						@LayoutHelper.AddGroupBtn()
						<div class="dropdown">
							<a href="javascript:void(0)" class="btn-dot-menu dropdown-toggle">
								<span class="icon-dots"></span>
							</a>
							<div class="dropdown-menu">
								<a class="dropdown-menu-item" href="@Url.Action("DownloadAll", Constants.CONTROLLER_W2CMS_MANAGER_PAGE_DESIGN)">全ページ・パーツ ダウンロード</a>
								@if (DesignCommon.UseSmartPhone)
								{
									<a class="dropdown-menu-item" href="@Url.Action("DownloadPc", Constants.CONTROLLER_W2CMS_MANAGER_PAGE_DESIGN)">PCサイト用 全ページ・パーツ ダウンロード</a>
									<a class="dropdown-menu-item" href="@Url.Action("DownloadSp", Constants.CONTROLLER_W2CMS_MANAGER_PAGE_DESIGN)">SPサイト用 全ページ・パーツ ダウンロード</a>
								}
								<a class="dropdown-menu-item" href="javascript:void(0)" onClick="consistency_action();return false;">
									機能外で追加されたファイルの取り込み
								</a>
							</div>
						</div>
					</div>
				</div>
				<div class="list-head-row">
					<div class="list-head-col ta-left">
						<p>管理用パーツ名</p>
					</div>
					<div class="list-head-col hide-list-detail w10">
						<p>タイプ</p>
					</div>
					<div class="list-head-col hide-list-detail w10">
						<p>サイト</p>
					</div>
					<div class="list-head-col hide-list-detail w10">
						<p>更新日時</p>
					</div>
					<div class="list-head-col hide-list-detail w10">
						<p>公開状態</p>
					</div>
				</div>
			</div>
			@* 領域:ページ一覧表示 *@
			<div id="list-content"></div>
		</div>
	</div>

	@* モーダルウィンドウ: グループ追加 *@
	@Html.Partial("_ModalAddGroup")

	<div id="model-group-edit-area"></div>

	@* 領域:詳細画面 *@
	<div id="main-content-detail" class="main-content-detail"></div>
	
	@* モーダルウィンドウ: 拡大画像 *@
	@Html.Partial("_EnlargedImageModal")

	@Html.Partial("_ModalDiffContentCode")
	
	@* モーダルウィンドウ: 復元リスト *@
	@Html.Partial("_ModalAutoBackedUpDesignFileList")

</div>

@section JavaScript
{
	<script type="text/javascript">
		$(function() {
			group_list_redraw();
			keyword_ini();
			all_open_close_toggle_ini();

			var urlHash = location.hash;
			if (urlHash) {
				var partsId = urlHash.replace("#parts", "");
				if (partsId != '@PartsDesignUtility.NEW_PARTS_DEFAULT_PARTS_ID') {
					open_parts(partsId);
				}
			}
		});

		/**
		* ページ・パーツ管理の整合性調整用のバッチ起動
		*/
		function consistency_action() {
			$.ajax({
				type: "GET",
				url: "@Url.Action("PageDesignConsistencyAction", w2.App.Common.Constants.CONTROLLER_W2CMS_MANAGER_PAGE_DESIGN)",
				traditional: true
			}).done(function () {
				notification.show("機能外から追加されたファイルを取り込んでいます。反映されるまで少々おまちください。", 'info', 'fadeout');
			}).fail(function () {
				notification.show("機能外から追加されたファイルの取り込みに失敗しました。", 'warning', 'fadeout');
			});
			return false;
		}

		/**
		* グループリスト再描画
		*/
		function group_list_redraw() {
			loading_animation.start();
			$.ajax({
				type: "POST",
				url: "@Url.Action("GroupList", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: $('#search_form').serializeArray(),
				traditional: true
			}).done(function(viewHTML) {
				$("#list-content").html(viewHTML);
				setTimeout(function() { loading_animation.end(); }, 200);
			}).fail(function() {
				setTimeout(function() { loading_animation.end(); }, 200);
			});
		}

		/**
		 * キーワードフォーム初期化
		 */
		function keyword_ini() {
			$('#search_keyword').off("keydown").on("keydown",
				function(e) {
					if (e.keyCode === 13) {
						group_list_redraw();
					}
				});
		}

		/**
		 * グループ名追加時・変更時の有効性チェック
		 * param {} name グループ名 
		 */
		function group_name_valid_check(name) {
			if (name === "") {
				notification.show("グループ名を入力してください", 'warning', 'fadeout');
				return false;
			}

			var duplicate = false;
			$('#group_list option').each(function() {
				if ($(this).text() === name) {
					duplicate = true;
					return;
				}
				return;
			});

			if (duplicate) {
				notification.show("グループ名が重複しています。", 'warning', 'fadeout');
				return false;
			}

			return true;
		}

		/**
		* グループ追加
		* param {} inputId グループ名入力フォームID
		*/
		function group_add(inputId) {
			if (group_name_valid_check($('#' + inputId).val()) === false) return;

			$.ajax({
				type: "POST",
				url: "@Url.Action("GroupAdd", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: { 'name': $('#' + inputId).val() }
			}).done(function(groupId) {
				group_dropDown_update_add("group_list", groupId, $('#' + inputId).val());
				group_dropDown_update_add("group-select", groupId, $('#' + inputId).val());
				group_list_redraw();
				$('#' + inputId).val("");
			}).fail(function() {
			});
		}

		/**
		 * グループドロップリスト更新 追加時
		 * param {} dropDownId 対象ドロップリストID
		 * param {} groupId グループID
		 * param {} groupName グループ名
		 */
		function group_dropDown_update_add(dropDownId, groupId, groupName) {
			if ($("#" + dropDownId + " option[value='" + groupId + "']").length === 0) {
				$("#" + dropDownId + " option[value='0']").before($('<option>').html(groupName).val(groupId));
			}
		}

		/**
		* 対象のカスタム・標準ページ編集画面の表示準備
		*/
		function open_main_content_detail_begin() {
			$("#main-content-detail").html(null);
			loading_animation.start();
			$('.main-content-frame').addClass('is-open-detail');
		}

		/**
		* 対象のカスタム・標準ページ編集画面の表示
		* param {} viewHTML レスポンスHTML
		*/
		function open_main_content_detail_success(viewHTML) {
			$("#main-content-detail").html(viewHTML);
			setTimeout(function() {
					var urlHash = location.hash;
					if (urlHash) {
						$("#" + urlHash.replace("#parts", "")).addClass("selected-low");
						$("#search_keyword").addClass("placeholder-display-none");
					}
					loading_animation.end();
					$('.main-content-detail-inner').show();
				},
				500);
		}

		/**
		* カスタムパーツ 新規登録画面の表示
		*/
		function open_new_custom_parts() {
			open_main_content_detail_begin();
			$.ajax({
				type: "POST",
				url: "@Url.Action("MainContentDetailRegister", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: { 'SelectStandardParts': $('#standard_parts_list').val() }
			}).done(function(viewHTML) {
				open_main_content_detail_success(viewHTML);
			}).fail(function() {
			});
		}

		var mainPartsTimer;

		/**
		 * パーツIDを指定してパーツ表示
		 * param {} pageId  
		 */
		function open_parts(partsId) {
			$(".selected-low").removeClass("selected-low");
			clearInterval(mainPartsTimer);
			open_main_content_detail_begin();
			$.ajax({
				type: "POST",
				url: "@Url.Action("MainContentDetail", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: { 'partsId': partsId }
			}).done(function(viewHtml) {
				display_content_detail(viewHtml, partsId);
			}).fail(function() {
			});
		}

		/**
		　* バックアップ履歴の取得
		*/
		function get_parts_backup_list() {
			var urlHash = location.hash;
			var partsId;
			if (urlHash) partsId = urlHash.replace("#parts", "");
			$.ajax({
				type: "GET",
				url: "@Url.Action("GetPartsBackupList", w2.App.Common.Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: { 'partsId': partsId },
				traditional: true
			}).done(function(json) {
				var jsonFileDatas;
				var isExistFiles;
				if (json.FileDetas.length > 0) {
					jsonFileDatas = json.FileDetas;
					isExistFiles = true;
				} else {
					jsonFileDatas = [];
					isExistFiles = false;
				}

				$("#auto-backed-up-design-file-list").empty();
				var list = '<!-- ko if: isExistFiles -->' +
					'<ul data-bind="foreach: fileDetas">' +
					'<li style="margin-top: 7px;"><a href="javascript:void(0)" data-bind="text: $data.FileName, click: $parent.onClick"></a>' +
					'<!-- ko if: $index() === 0 -->（最新）<!-- /ko --></li></ul>' +
					'<!-- /ko -->' +
					'<!-- ko ifnot: isExistFiles -->' +
					'<p>バックアップファイルが存在しません。</p>' +
					'<!-- /ko -->';
				$("#auto-backed-up-design-file-list").html(list);

				var fileDetasViewModel = {
					isExistFiles: isExistFiles,
					fileDetas: jsonFileDatas,
					onClick: function(obj) {
						if (window.confirm('バックアップからレイアウトを復元しますか？')) {
							restore_for_layout_and_content(partsId, obj.FileName);
						}
						modal.close();
					}
				};

				ko.cleanNode(document.getElementById('auto-backed-up-design-file-list'));
				ko.applyBindings(fileDetasViewModel, document.getElementById('auto-backed-up-design-file-list'));
			}).fail(function() {
				notification.show("バックアップ履歴の取得に失敗しました。もう一度開き直してください。", 'warning', 'fadeout');
			});
		}

		/**
		 * レイアウトとコンテンツの復元
		 */
		function restore_for_layout_and_content(partsId, fileName) {
			clearInterval(mainPartsTimer);
			open_main_content_detail_begin();
			$.ajax({
				type: "POST",
				url:
					"@Url.Action("RestoreMainContentDetail", w2.App.Common.Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
				data: {
					'partsId': partsId,
					'fileName': fileName
				}
			}).done(function(viewHtml) {
				display_content_detail(viewHtml);
				notification.show("バックアップからレイアウトを復元しました。", 'info', 'fadeout');
			}).fail(function() {
				notification.show("レイアウトの復元に失敗しました。", 'warning', 'fadeout');
			});
		}

		/**
		 * コンテンツの詳細を表示
		 */
		function display_content_detail(viewHtml, partsId) {
			if (viewHtml !== "open_page_failed()") {
				open_main_content_detail_success(viewHtml);
				checkOtherOperatorFileOpening('partsId' + partsId).done(function(result) {
					$('.btn.btn-main.btn-size-l').attr('disabled', false);
					if (result !== "") {
						notification.show(result, 'warning', 'fixed');
						$('.btn.btn-main.btn-size-l').attr('disabled', true);
					} else {
						sendOpeningFileName('partsId' + partsId);
						mainPartsTimer =
							setInterval(function() { sendOpeningFileName('partsId' + partsId) }, 50 * 1000);
					}
				});
			}
		}

		/**
		 * パーツ削除
		 * param {} pageId ページID
		 */
		function delete_custom_parts(partsId) {
			if (confirm('パーツは削除されます。よろしいでしょうか？') === false) return;
			checkOtherOperatorFileOpening('partsId' + partsId).done(function(result) {
				if (result !== "") {
					notification.show(result, 'warning', 'fixed');
					return;
				} else {
					$.ajax({
						type: "POST",
						url: "@Url.Action("DeleteParts", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)",
						data: { 'partsId': partsId }
					}).done(function(errorMessage) {
						// 警告表示を削除
						$('.notification-message-warning').remove();
						if (errorMessage === "") {
							list.close();
							$("#main-content-detail").html(null);
							group_list_redraw();
							notification.show('削除が実行されました', 'info', 'fadeout');
						} else {
							notification.show(errorMessage, 'warning', 'fixed');
						}
					}).fail(function() {
					});
				}
			});
		}

		/**
		* リセット
		* param {} partsId 対象パーツID
		*/
		function parts_main_content_detail_reset(partsId) {
			if (partsId == '@PartsDesignUtility.NEW_PARTS_DEFAULT_PARTS_ID') {
				open_new_custom_parts();
			} else {
				open_parts(partsId);
			}
		}
	</script>
}
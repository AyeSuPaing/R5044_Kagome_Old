@*
=========================================================================================================
  Module      : パーツ管理 パーツ詳細(パーシャルビュー)(_PartsDesignContentDetail.cshtml)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2019 All Rights Reserved.
=========================================================================================================
*@

@using w2.App.Common.Design
@using w2.App.Common.Util
@using w2.Cms.Manager.Codes
@using w2.Cms.Manager.Codes.PageDesign
@using w2.Cms.Manager.ViewModels.PartsDesign
@model w2.Cms.Manager.ViewModels.PartsDesign.PartsDetailViewModel

@* コンテンツ編集備考欄 *@
@helper ContentEditRemarks()
{
	<div class="bottom-notes">
		<p>備考</p>
		<p>■ファイル内の編集箇所について</p>
		<code>
			<%-- ▽編集可能領域：【項目名】▽ --%><br>
			<%-- △編集可能領域△ --%>
		</code>
		<br>aspxファイル内に記載された上記のタグ内に編集内容が反映されます。
		<br>
		<p>例) 項目名:コンテンツの場合</p>
		<code>
			<%-- ▽編集可能領域：コンテンツ▽ --%><br>
			<%-- △編集可能領域△ --%>
		</code>
	</div>
}

@helper FeatureAreaLink()
{
	<a class="parts-template-featureArea-link-btn" href="@Url.Action("Main", Constants.CONTROLLER_W2CMS_MANAGER_FEATURE_AREA)#@Model.PartsModel.AreaId" onclick="return confirm('編集内容は更新されていません。よろしいですか？')" target="_blank">
		<button class="btn btn-size-m btn-main" type="button">特集エリアを開く</button>
	</a>
}

@using (Html.BeginForm("UpdateDetailParts", Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN, new
{
}, FormMethod.Post, new
{
	Id = "parts_detail_form"
}))
{
	@Html.HiddenFor(model => Model.Input.PartsId, new
	{
		Name = "Input.PartsId"
	})
	@Html.HiddenFor(model => Model.Input.PartsType, new
	{
		Name = "Input.PartsType"
	})
	@Html.HiddenFor(model => Model.Input.CreateNewFileName, new
	{
		Name = "Input.CreateNewFileName"
	})
	@Html.HiddenFor(model => Model.Input.TemplateFilePath, new
	{
		Name = "Input.TemplateFilePath"
	})
	@Html.HiddenFor(model => Model.Input.FileDirPath, new
	{
		Name = "Input.FileDirPath"
	})
	<div class="main-content-detail-head">
		<div class="main-content-detail-head-title h2">
			@if (Model.Input.IsCustomPage)
			{
				@Html.TextBoxFor(model => model.Input.ManagementTitle, new
				{
					Name = "Input.ManagementTitle",
					Placeholder = "管理用パーツ名を入力してください（必須）"
				})
			}
			else
			{
				@Model.Input.ManagementTitle
			}
		</div>
		<div class="main-content-detail-head-main-actions">
		@if (Model.Input.IsCustomPage)
		{
			<div class="form-element-group form-element-group-horizontal">
				<div class="form-element-group-title">
					@Html.Label("form-select-page-status", "状態")
				</div>
				<div class="form-element-group-content">
					@Html.DropDownListFor(model => model.Input.Publish, Model.PublishItems, new
					{
						Id = "form-select-page-status",
						Name = "Input.Publish"
					})
				</div>
			</div>
		}
			<a href="javascript:parts_preview()" class="btn btn-txt btn-size-m">プレビュー</a>
			@if (Model.IsActionStatusUpdate)
			{
				<input type="button" id = "partsContentDetailUpdateButton" class="btn btn-main btn-size-l" onclick="parts_content_detail_update_code_diff_check()" value="更新">
			}
			@if (Model.IsActionStatusInsert || Model.IsActionStatusCopyInsert)
			{
				<input type="button" id = "partsContentDetailUpdateButton" class="btn btn-main btn-size-l" onclick="parts_main_content_detail_register()" value="登録">
			}
			<div class="dropdown">
				<a href="javascript:void(0)" class="btn-dot-menu dropdown-toggle">
					<span class="icon-dots"></span>
				</a>
				<div class="dropdown-menu">
					@if (Model.PermissionCopy && Model.IsActionStatusUpdate)
					{
						<a class="dropdown-menu-item" href="javascript:custom_parts_copy(@Model.Input.PartsId)">複製して新規作成する</a>
					}
					@if (Model.PermissionDelete && Model.IsActionStatusUpdate)
					{
						<a class="dropdown-menu-item" href="javascript:delete_custom_parts(@Model.Input.PartsId)">削除する</a>
					}
					@if (Model.IsActionStatusUpdate)
					{
					<a class="dropdown-menu-item" href="javascript:void(0);" onclick="modal.open('#modal_auto_backup_list', 'modal-size-m', '');get_parts_backup_list();">復元する</a>
					}
					<a class="dropdown-menu-item" href="javascript:parts_main_content_detail_reset(@Model.Input.PartsId)">リセットする</a>
				</div>
			</div>
		</div>
	</div>
	<div class="main-content-detail-body">

	@if (Model.PermissionAddGroup)
	{
		<div class="group-select">
			<div class="form-element-group form-element-group-horizontal">
				<div class="form-element-group-title">
					@Html.Label("group-select", "グループ")
				</div>
				<div class="form-element-group-content">
					<span class="custom-select">
						@Html.DropDownListFor(model => model.Input.GroupId, Model.GroupItems, new
						{
							Id = "group-select",
							Name = "Input.GroupId"
						})
					</span>
				</div>
			</div>
			<a href="javascript:void(0)" class="group-select-add-group-trigger btn btn-txt btn-size-s">グループを追加する</a>
			<div class="group-select-add-group-bg"></div>
			<div class="group-select-add-group-form">
				<div class="group-select-add-group-form-title">グループを追加する</div>
				<div class="group-select-add-group-form-input-wrap">
					@Html.TextBox("Input.GroupName", "グループ名", new
					{
						id = "form-list-group-name-detail",
						Class = "group-select-add-group-form-input w60",
						Placeholder = "グループ名"
					})
					<a href="javascript:group_add('form-list-group-name-detail');" class="group-select-add-group-submit btn btn-main btn-size-m">追加する</a>
				</div>
				<div class="group-select-add-group-form-exist-list">
					@foreach (var groupItem in Model.GroupItems)
					{
						<span class="group-select-add-group-form-exist-list-item">@groupItem.Text</span>
					}
				</div>
			</div>
		</div>
	}

	@if (Model.Input.IsCustomPage)
	{
		@Html.Partial("_ReleaseRangeSetting", Model.Input.ReleaseRangeSettingInput)
	}

	<div class="form-element-group form-element-group-horizontal-grid">
		<div class="form-element-group-title">
			サイト
		</div>
		<div class="form-element-group-content">
			<div class="tabs tabs-site-select">
				@if (Model.PcRealParts.IsPartFileExists)
				{
					<div class="tabs-tab" id="tabs-tab-parts-pc">
						<a href="javascript:void(0)" class="tab tab-parts is-active" data-tab-content-selector="#tab-parts-pc">
							@Html.Raw((DesignCommon.UseResponsive) ? "RESPONSIVE" : "PC")
						</a>
					</div>
				}
				@if (Model.SpRealParts.IsPartFileExists && DesignCommon.UseSmartPhone)
				{
					<div class="tabs-tab" id="tabs-tab-parts-sp">
						<a href="javascript:void(0)" class="tab tab-parts" data-tab-content-selector="#tab-parts-sp">SP</a>
					</div>
				}
			</div>
		</div>
	</div>
		
	@if (Model.PcRealParts.IsPartFileExists)
	{
	<div id="tab-parts-pc" class="main-content-detail-site">
		@if (Model.Input.IsCustomPage)
		{
			<div class="page-layout-template-active-selector">
				<input id="parts-layout-template-active-selector-pc"
						name="Input.PcContentInput.NoUse"
						data-val="true"
						data-val-required="NoUsePc フィールドが必要です。"
						type="checkbox"
						value="true">
				@Html.Label("parts-layout-template-active-selector-pc", "使用しない")
			</div>
		}
		<!-- PC -->
		<div class="tab-content">

			@if (Model.Input.IsCustomPage)
			{
				<div class="parts-template-selector">
					テンプレート：@Model.PcRealParts.TemplateTitle
				</div>

				if (Model.PcRealParts.CheckFeatureArea) { @FeatureAreaLink() }
			}

			@* コンテンツ編集 *@
			@{ var i = 0; }
			@foreach (var content in Model.Input.PcContentInput.Content)
			{
				var codeEditorId = "partsCodeEditorId" + i;
				var codeEditorHideAreaId = "partsCodeEditorHideAreaId" + i;
				var codeEditorBeforeHideAreaId = "partsCodeEditorBeforeHideAreaId" + i;
				var codeEditorResizeBtnId = "partsCodeEditorResizeBtnId" + i;
				<script type="text/javascript">
					$(function() {
						set_ace_code_editor("@codeEditorId", "@codeEditorHideAreaId", "@codeEditorResizeBtnId");
						pc_diff.addModel("@content.Key", "@codeEditorBeforeHideAreaId", "@codeEditorHideAreaId");
					});
				</script>
				<div class="form-element-group form-element-group-vertical">
					<div class="form-element-group-title">
						<label>@content.Key</label>
					</div>
					<div class="form-element-group-content">
						<div id="@codeEditorId" class="codeeditor">@content.Value</div>
						@Html.HiddenFor(model => content.Key, new
						{
							Name = "Input.PcContentInput.Content[" + i + "].Key",
						})
						@Html.TextAreaFor(model => content.Value, new
						{
							Name = "Input.PcContentInput.Content[" + i + "].Value",
							Id = codeEditorHideAreaId,
							style = "display: none;"
						})
						@Html.TextAreaFor(model => content.Value, new
						{
							Id = codeEditorBeforeHideAreaId,
							style = "display: none;"
						})
						<button class="btn btn-size-m btn-main editor-resize-btn" type="button" id="@codeEditorResizeBtnId">拡大</button>
					</div>
				</div>
				i++;
			}
			
			<div class="bottom-notes">
				<dl>
					<dt>作成日</dt>
					<dd>@DateTimeUtility.ToStringForManager(Model.PcRealParts.CreateDate, DateTimeUtility.FormatType.ShortDateHourMinuteSecond2Letter)</dd>
					<dt>更新日</dt>
					<dd>@DateTimeUtility.ToStringForManager(Model.PcRealParts.UpdateDate, DateTimeUtility.FormatType.ShortDateHourMinuteSecond2Letter)</dd>
					<dt>最終更新者</dt>
					<dd>@Model.PcRealParts.LastChange</dd>
				</dl>
			</div>

			@ContentEditRemarks()

		</div>
		<!-- /PC -->
	</div>
	}
	<div id="tab-parts-sp" class="main-content-detail-site" style="display: none;">
		@if (Model.Input.IsCustomPage)
  {
			<div class="page-layout-template-active-selector">
				<input id="parts-layout-template-active-selector-sp"
						name="Input.SpContentInput.NoUse"
						data-val="true"
						data-val-required="NoUseSp フィールドが必要です。"
						type="checkbox"
						value="true">
				@Html.Label("parts-layout-template-active-selector-sp", "使用しない")
			</div>
  }
		<!-- SP -->
		<div class="tab-content">

			@if (Model.Input.IsCustomPage)
   {
				<div class="parts-template-selector">
					テンプレート：@Model.SpRealParts.TemplateTitle
				</div>

				if (Model.SpRealParts.CheckFeatureArea) { @FeatureAreaLink() }
   }

			@* コンテンツ編集 *@
			@{ var j = 0; }
			@foreach (var content in Model.Input.SpContentInput.Content)
   {
	   var codeEditorIdSp = "partsCodeEditorIdSp" + j;
	   var codeEditorHideAreaIdSp = "partsCodeEditorHideAreaIdSp" + j;
	   var codeEditorBeforeHideAreaIdSp = "partsCodeEditorBeforeHideAreaIdSp" + j;
	   var codeEditorResizeBtnIdSp = "partsCodeEditorResizeBtnIdSp" + j;
				<script type="text/javascript">
					$(function() {
						set_ace_code_editor("@codeEditorIdSp", "@codeEditorHideAreaIdSp", "@codeEditorResizeBtnIdSp");
						sp_diff.addModel("@content.Key", "@codeEditorBeforeHideAreaIdSp", "@codeEditorHideAreaIdSp");
					});
				</script>
				<div class="form-element-group form-element-group-vertical">
					<div class="form-element-group-title">
						<label>@content.Key</label>
					</div>
					<div class="form-element-group-content">
						<div id="@codeEditorIdSp" class="codeeditor">@content.Value</div>
						@Html.HiddenFor(model => content.Key, new
 {
	 Name = "Input.SpContentInput.Content[" + j + "].Key"
 })
						@Html.TextAreaFor(model => content.Value, new
 {
	 Name = "Input.SpContentInput.Content[" + j + "].Value",
	 Id = codeEditorHideAreaIdSp,
	 style = "display: none;"
 })
						@Html.TextAreaFor(model => content.Value, new
 {
	 Id = codeEditorBeforeHideAreaIdSp,
	 style = "display: none;"
 })
						<button class="btn btn-size-m btn-main editor-resize-btn" type="button" id="@codeEditorResizeBtnIdSp">拡大</button>
					</div>
				</div>
	   j++;
   }

			<div class="bottom-notes">
				<dl>
					<dt>作成日</dt>
					<dd>@DateTimeUtility.ToStringForManager(Model.SpRealParts.CreateDate, DateTimeUtility.FormatType.ShortDateHourMinuteSecond2Letter)</dd>
					<dt>更新日</dt>
					<dd>@DateTimeUtility.ToStringForManager(Model.PcRealParts.UpdateDate, DateTimeUtility.FormatType.ShortDateHourMinuteSecond2Letter)</dd>
					<dt>最終更新者</dt>
					<dd>@Model.SpRealParts.LastChange</dd>
				</dl>
			</div>

			@ContentEditRemarks()
		</div>
		<!-- /SP -->
	</div>
	</div>
}

<script type="text/javascript">
	$(function() {
		height_fit.ini();
		custom_scroll.ini();
		tab.ini();
		page_url_edit.ini();
		page.ini();
		parts.ini();
		list.ini();
		dropdown_toggle.ini();
		parts_use_device_check_ini();
	});

	/**
	* PCコード差分
	*/
	var pc_diff = new diff_main_content_model("PC");
	/**
	 * SPコード差分
	 */
	var sp_diff = new diff_main_content_model("SP");

	/**
	 * コード差分チェック
	 */
	function parts_content_detail_update_code_diff_check() {
		checkOtherOperatorFileOpening('partsId' + '@Model.Input.PartsId').done(function (result) {
			if (result !== "") {
				notification.show(result, 'warning', 'fixed');
			} else {
		$('#modal-inner-diff-content-code-inner').html(null);
		$('#modal-inner-diff-content-code-inner')
			.append(
				"<div id=\"modal-diff-content-show-pc\" style=\"display: inline-block; vertical-align: top; width: 48%; padding-right: 1.5%\"></div>");
		var pc_result = pc_diff.diffHtml('modal-diff-content-show-pc');
		$('#modal-inner-diff-content-code-inner')
			.append(
				"<div id=\"modal-diff-content-show-sp\" style=\"display: inline-block; vertical-align: top; width: 50%\"></div>");
		var sp_result = sp_diff.diffHtml('modal-diff-content-show-sp');
		if (pc_result || sp_result) {
			setTimeout(function() {
					custom_scroll.ini();
					$('#modal-diff-content-code-update-btn').off('click').on('click',
						function() {
							modal.close();
							parts_main_content_detail_update();
						});
					modal.open('#modal-diff-content-code', 'modal-size-l', '');
				},
				500);
		} else {
			parts_main_content_detail_update();
		}
			}
		});
	}

	/**
	* プレビュー表示
	*/
	function parts_preview() {
		loading_animation.start();
		var url = "";
		var windowSize = "";

		if ($('.tab.tab-parts.is-active').data('tab-content-selector') === "#tab-parts-pc") {
			url = "@Url.Action("PreviewPc", w2.App.Common.Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)";
			windowSize = "";
		} else {
			url = "@Url.Action("PreviewSp", w2.App.Common.Constants.CONTROLLER_W2CMS_MANAGER_PARTS_DESIGN)";
			windowSize = "width=450,height=800";
		}
		$.ajax({
			type: "POST",
			url: url,
			data: $('#parts_detail_form').serializeArray()
		}).done(function (response) {
			if (response.errorMessage) {
				notification.show(response.errorMessage, 'warning', 'fixed');
			} else {
				setTimeout(function () {
					loading_animation.end();
					open_window(response.url, '_blank', windowSize);
				}, 1500);
			}
			loading_animation.end();
		}).fail(function() {
		});
	}

	/**
	 * 各デバイス使用の有無チェックボックス初期配置
	 */
	function parts_use_device_check_ini() {
		@* PCを利用しない場合は使用しないにチェック *@
		@if (Model.Input.PcContentInput.NoUse)
  {
			@Html.Raw("$('#parts-layout-template-active-selector-pc').click();")
  }

		@* SPを利用しない場合は使用しないにチェック *@
		@if (Model.Input.SpContentInput.NoUse)
  {
			@Html.Raw("$('#parts-layout-template-active-selector-sp').click();")
  }

		@* SPのみを利用の場合はデフォルトSP表示 *@
		@if (Model.Input.PcContentInput.NoUse && (Model.Input.SpContentInput.NoUse == false))
  {
			@Html.Raw("$('#tabs-tab-parts-sp > a').click();")
  }

		@* デフォルトSP表示の場合 *@
		@if (
			(Model.Input.PcContentInput.NoUse == false)
			&& (Model.Input.SpContentInput.NoUse == false)
			&& (Model.DefaultDisplayDevice == PartsDetailViewModel.DisplayDevice.SP))
  {
			@Html.Raw("$('#tabs-tab-parts-sp > a').click();")
		}
	}

	/**
	 * コードエディターの無効化
	 */
	function codeEditInvalid() {
		$('.main-content-detail-site .ace_text-input').prop("disabled", true);
		$('.main-content-detail-site .codeeditor').css("background-color", "#d0cfcf");
		$('.main-content-detail-site .codeeditor').css("opacity", "0.8");
		$('.page-layout-template-active-selector').css("display", "none");
	}
</script>

<?xml version="1.0" encoding="utf-8" ?>
<!--
=========================================================================================================
  Module      : 会員ランク変更履歴系SQLステートメントXML(UserMemberRank.xml)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2010 All Rights Reserved.
=========================================================================================================
-->
<UserMemberRank>

  <!-- 会員ランク更新履歴該当件数取得 -->
  <GetUserMemberRankHisCount>
    <Statement>
      <![CDATA[
        -- 全件数取得
        SELECT  ISNULL(COUNT(w2_UserMemberRankHistory.history_no), 0) AS row_count
          FROM  w2_UserMemberRankHistory
                [[ USERMEMBERRANKHIS_SEARCH_WHERE ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="user_id_like_escaped" Type="nvarchar" Size="60" />
      <Input Name="before_rank_id" Type="nvarchar" Size="30" />
      <Input Name="after_rank_id" Type="nvarchar" Size="30" />
      <Input Name="date_created_from" Type="varchar" Size="20" />
      <Input Name="date_created_to" Type="varchar" Size="20" />
    </Parameter>
  </GetUserMemberRankHisCount>
  
  <!-- 会員ランク更新履歴一覧取得 -->
  <GetUserMemberRankHisList>
    <Statement>
      <![CDATA[
        -- 該当情報取得
        SELECT  w2_UserMemberRankHistory.*,
                BeforeRank.member_rank_name AS before_rank_name,
                AfterRank.member_rank_name AS after_rank_name
          FROM  (
                  SELECT  w2_UserMemberRankHistory.history_no,
                          ROW_NUMBER()
                          OVER
                          (
                            [[ USERMEMBERRANKHIS_SEARCH_ORDER_BY ]]
                          ) AS row_num
                    FROM  w2_UserMemberRankHistory
                          [[ USERMEMBERRANKHIS_SEARCH_WHERE ]]
                ) AS RowIndex
                INNER JOIN w2_UserMemberRankHistory ON
                (
                  RowIndex.history_no = w2_UserMemberRankHistory.history_no
                )
                -- 更新前ランク名取得用(ランクが存在しない場合を考慮)
                LEFT OUTER JOIN w2_MemberRank AS BeforeRank ON
                (
                  w2_UserMemberRankHistory.before_rank_id = BeforeRank.member_rank_id
                )
                -- 更新後ランク名取得用(ランクが存在しない場合を考慮)
                LEFT OUTER JOIN w2_MemberRank AS AfterRank ON
                (
                  w2_UserMemberRankHistory.after_rank_id = AfterRank.member_rank_id
                )
         WHERE  @bgn_row_num <= RowIndex.row_num
           AND  RowIndex.row_num <= @end_row_num
      ORDER BY  RowIndex.row_num ASC
      ]]>
    </Statement>
    <Parameter>
      <Input Name="user_id_like_escaped" Type="nvarchar" Size="60" />
      <Input Name="before_rank_id" Type="nvarchar" Size="30" />
      <Input Name="after_rank_id" Type="nvarchar" Size="30" />
      <Input Name="date_created_from" Type="varchar" Size="20" />
      <Input Name="date_created_to" Type="varchar" Size="20" />
      <Input Name="bgn_row_num" Type="int" />
      <Input Name="end_row_num" Type="int" />
    </Parameter>
  </GetUserMemberRankHisList>

  <!-- 会員ランク変更履歴を追加 -->
  <InsertUserMemberRankHistory>
    <Statement>
      <![CDATA[
        INSERT  w2_UserMemberRankHistory
                (
                user_id,
                before_rank_id,
                after_rank_id,
                mail_id,
                changed_by
			          )
	      VALUES  (
                @user_id,
                @before_rank_id,
                @after_rank_id,
                @mail_id,
                @changed_by
                )
			]]>
    </Statement>
    <Parameter>
      <Input Name="user_id" Type="nvarchar" Size="30" />
      <Input Name="before_rank_id" Type="nvarchar" Size="30" />
      <Input Name="after_rank_id" Type="nvarchar" Size="30" />
      <Input Name="mail_id" Type="nvarchar" Size="10" />
      <Input Name="changed_by" Type="nvarchar" Size="100" />
    </Parameter>
  </InsertUserMemberRankHistory>

</UserMemberRank>
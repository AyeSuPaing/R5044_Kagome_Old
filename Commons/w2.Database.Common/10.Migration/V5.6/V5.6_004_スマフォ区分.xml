<?xml version="1.0" encoding="utf-8" ?>
<Migration>
  <Up>
    <Statement>
      <![CDATA[

-- 属性変更：user_agent varchar(256) → varchar(512)
ALTER TABLE w2_AccessLog ALTER COLUMN user_agent varchar(512)
GO
ALTER TABLE w2_AccessLogMobile ALTER COLUMN user_agent varchar(512)
GO

-- カラム追加：user_agent_kbn varchar(10)
ALTER TABLE w2_AccessLog ADD user_agent_kbn varchar(10) NOT NULL DEFAULT N'PC'
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateSummaryAcsPageSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateSummaryAcsPageSp]
GO
/*
=========================================================================================================
  Module      : アクセスページサマリ作成プロシージャ(w2_CreateSummaryAcsPageSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateSummaryAcsPageSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 定数設定
	---------------------------------------
	DECLARE @SUMMARY_KBN nvarchar(30)
	SET @SUMMARY_KBN = 'acspage'

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @DEPT_ID nvarchar(30)
	DECLARE @TGT_YEAR nvarchar(4)
	DECLARE @TGT_MONTH nvarchar(2)
	DECLARE @TGT_DAY nvarchar(2)
	
	DECLARE @tmp_table TABLE(
		[value_name] [nvarchar] (1000) NOT NULL DEFAULT (N''),
		[counts] [bigint] NOT NULL DEFAULT (0)
	)

	---------------------------------------
	-- dept_idカーソル定義
	---------------------------------------
	DECLARE CUR_DEPTID CURSOR FOR
	SELECT	DISTINCT dept_id
	  FROM	w2_AccessLogAccount

	---------------------------------------
	-- 日付分割
	---------------------------------------
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)

	---------------------------------------
	-- 識別IDカーソル開く・最終行までループ
	---------------------------------------
	OPEN CUR_DEPTID

	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- dept_id取得
		---------------------------------------
		FETCH NEXT FROM	CUR_DEPTID
		  INTO	@DEPT_ID

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		-- アクセスページサマリ作成（PC）
		---------------------------------------
		SET @SUMMARY_KBN = 'acspage'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- アクセスページ数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.url_page,
						SUM(a.count) AS count
				FROM	(
						SELECT 	url_page,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	user_agent_kbn = 'PC'
						GROUP BY url_page
					) a
				GROUP BY url_page
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
		
		---------------------------------------
		-- アクセスページサマリ作成（スマートフォン）
		---------------------------------------
		SET @SUMMARY_KBN = 'acspage_sp'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- アクセスページ数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.url_page,
						SUM(a.count) AS count
				FROM	(
						SELECT 	url_page,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	user_agent_kbn = 'SP'
						GROUP BY url_page
					) a
				GROUP BY url_page
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
	END

	---------------------------------------
	-- カーソル閉じる
	---------------------------------------
	CLOSE CUR_DEPTID
	DEALLOCATE CUR_DEPTID
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateSummaryPdctSrchSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateSummaryPdctSrchSp]
GO
/*
=========================================================================================================
  Module      : 商品検索サマリ作成プロシージャ(w2_CreateSummaryPdctSrchSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateSummaryPdctSrchSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @DEPT_ID nvarchar(30)
	DECLARE @SUMMARY_KBN nvarchar(30)
	DECLARE @TGT_YEAR nvarchar(4)
	DECLARE @TGT_MONTH nvarchar(2)
	DECLARE @TGT_DAY nvarchar(2)

	---------------------------------------
	-- 日付分割
	---------------------------------------
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)


	---------------------------------------
	-- 検索ワードサマリ作成（全体）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_searchword'	-- 検索ワード

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved1
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			search_word,
			COUNT(*) AS TOTAL,
			AVG(hits) as AVERAGE
	  FROM	w2_ProductSearchWordHistory
	 WHERE	dept_id = @DEPT_ID
	   AND	date_created BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	GROUP BY search_word
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 検索ワードサマリ作成（PC）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_searchword_pc'	-- 検索ワード

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved1
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			search_word,
			COUNT(*) AS TOTAL,
			AVG(hits) as AVERAGE
	  FROM	w2_ProductSearchWordHistory
	 WHERE	dept_id = @DEPT_ID
	   AND	date_created BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	access_kbn = '0'	-- アクセス区分（PC'0' or モバイル'1' or スマートフォン'2'）
	GROUP BY search_word
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 検索ワードサマリ作成（モバイル）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_searchword_mob'	-- 検索ワード

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved1
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			search_word,
			COUNT(*) AS TOTAL,
			AVG(hits) as AVERAGE
	  FROM	w2_ProductSearchWordHistory
	 WHERE	dept_id = @DEPT_ID
	   AND	date_created BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	access_kbn = '1'	-- アクセス区分（PC'0' or モバイル'1' or スマートフォン'2'）
	GROUP BY search_word
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 検索ワードサマリ作成（スマートフォン）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_searchword_sp'	-- 検索ワード

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved1
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			search_word,
			COUNT(*) AS TOTAL,
			AVG(hits) as AVERAGE
	  FROM	w2_ProductSearchWordHistory
	 WHERE	dept_id = @DEPT_ID
	   AND	date_created BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	access_kbn = '2'	-- アクセス区分（PC'0' or モバイル'1' or スマートフォン'2'）
	GROUP BY search_word
	ORDER BY TOTAL DESC


	---------------------------------------
	-- 商品販売数サマリ作成（全体）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buycount'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity) AS TOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 商品販売数サマリ作成（PC）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buycount_pc'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity) AS TOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'PC'					-- 注文区分がPC
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 商品販売数サマリ作成（モバイル）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buycount_mob'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity) AS TOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'MB'					-- 注文区分がモバイル
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 商品販売数サマリ作成（スマートフォン）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buycount_sp'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity) AS TOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'SP'					-- 注文区分がスマートフォン
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC


	---------------------------------------
	-- 商品販売金額サマリ作成（全体）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buyprice'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved2,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity * product_price)  AS TOTAL,
			SUM(
				w2_OrderItem.item_quantity * w2_OrderItem.product_price
				- Floor(
					w2_OrderItem.item_quantity * w2_OrderItem.product_price / ((100 + w2_OrderItem.product_tax_rate) / 100)
					+ CASE w2_OrderItem.product_tax_round_type
						WHEN 'ROUNDDOWN' THEN 0
						WHEN 'ROUNDUP' THEN 0.9
						ELSE 0.5
					END
				)
			)  AS TAXTOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 商品販売金額サマリ作成（PC）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buyprice_pc'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved2,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity * product_price)  AS TOTAL,
			SUM(
				w2_OrderItem.item_quantity * w2_OrderItem.product_price
				- Floor(
					w2_OrderItem.item_quantity * w2_OrderItem.product_price / ((100 + w2_OrderItem.product_tax_rate) / 100)
					+ CASE w2_OrderItem.product_tax_round_type
						WHEN 'ROUNDDOWN' THEN 0
						WHEN 'ROUNDUP' THEN 0.9
						ELSE 0.5
					END
				)
			)  AS TAXTOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'PC'					-- 注文区分がPC
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC

	---------------------------------------
	-- 商品販売金額サマリ作成（モバイル）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buyprice_mob'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved2,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity * product_price)  AS TOTAL,
			SUM(
				w2_OrderItem.item_quantity * w2_OrderItem.product_price
				- Floor(
					w2_OrderItem.item_quantity * w2_OrderItem.product_price / ((100 + w2_OrderItem.product_tax_rate) / 100)
					+ CASE w2_OrderItem.product_tax_round_type
						WHEN 'ROUNDDOWN' THEN 0
						WHEN 'ROUNDUP' THEN 0.9
						ELSE 0.5
					END
				)
			)  AS TAXTOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'MB'					-- 注文区分がモバイル
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC
	
	---------------------------------------
	-- 商品販売金額サマリ作成（スマートフォン）
	---------------------------------------
	SET @DEPT_ID = '0'
	SET @SUMMARY_KBN = 'pct_buyprice_sp'	-- 商品販売数

	-- 削除
	DELETE
	  FROM	w2_DispSummaryAnalysis
	 WHERE	dept_id = @DEPT_ID
	   AND	summary_kbn = @SUMMARY_KBN
	   AND	tgt_year = @TGT_YEAR
	   AND	tgt_month = @TGT_MONTH
	   AND	tgt_day = @TGT_DAY

	-- 挿入
	INSERT
	  INTO	w2_DispSummaryAnalysis
			(
			dept_id,
			summary_kbn,
			tgt_year,
			tgt_month,
			tgt_day,
			value_name,
			counts,
			reserved2,
			reserved6,
			reserved7
			)
	SELECT	@DEPT_ID,
			@SUMMARY_KBN,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			MAX(w2_OrderItem.product_name),
			SUM(w2_OrderItem.item_quantity * product_price)  AS TOTAL,
			SUM(
				w2_OrderItem.item_quantity * w2_OrderItem.product_price
				- Floor(
					w2_OrderItem.item_quantity * w2_OrderItem.product_price / ((100 + w2_OrderItem.product_tax_rate) / 100)
					+ CASE w2_OrderItem.product_tax_round_type
						WHEN 'ROUNDDOWN' THEN 0
						WHEN 'ROUNDUP' THEN 0.9
						ELSE 0.5
					END
				)
			)  AS TAXTOTAL,
			w2_OrderItem.product_id,
			w2_OrderItem.variation_id
	  FROM	w2_Order
			LEFT JOIN w2_OrderItem ON w2_Order.order_id = w2_OrderItem.order_id
	 WHERE	order_date BETWEEN  @TARGET_DATE + ' 00:00:00' AND @TARGET_DATE + ' 23:59:59'
	   AND	order_status NOT IN ('TMP','ODR_CNSL','TMP_CNSL')	-- 仮注文、キャンセル、仮注文キャンセルは除外
	   AND	order_kbn = 'SP'					-- 注文区分がスマートフォン
	GROUP BY w2_OrderItem.product_id, w2_OrderItem.variation_id
	ORDER BY TOTAL DESC
	
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateSummaryRefDomainSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateSummaryRefDomainSp]
GO
/*
=========================================================================================================
  Module      : リファラードメインサマリ作成プロシージャ(w2_CreateSummaryRefDomainSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateSummaryRefDomainSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @DEPT_ID nvarchar(30)
	DECLARE @SUMMARY_KBN nvarchar(30)
	DECLARE @TGT_YEAR nvarchar(4)
	DECLARE @TGT_MONTH nvarchar(2)
	DECLARE @TGT_DAY nvarchar(2)
	
	DECLARE @tmp_table TABLE(
		[value_name] [nvarchar] (1000) NOT NULL DEFAULT (N''),
		[counts] [bigint] NOT NULL DEFAULT (0),
		[same_domain_flg] [bigint] NOT NULL DEFAULT (0)
	)

	---------------------------------------
	-- dept_idカーソル定義
	---------------------------------------
	DECLARE CUR_DEPTID CURSOR FOR
	SELECT	DISTINCT dept_id
	  FROM	w2_AccessLogAccount

	---------------------------------------
	-- 日付分割
	---------------------------------------
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)

	---------------------------------------
	-- 識別IDカーソル開く・最終行までループ
	---------------------------------------
	OPEN CUR_DEPTID

	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- dept_id取得
		---------------------------------------
		FETCH NEXT FROM	CUR_DEPTID
		  INTO	@DEPT_ID

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		-- リファラードメインサマリ作成（PC）
		---------------------------------------
		SET @SUMMARY_KBN = 'refdomain'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- リファラードメイン数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts,
					same_domain_flg
				)
				SELECT	a.referrer_domain,
						SUM(a.count) AS count,
						a.same_domain_flg
				FROM	(
						SELECT 	referrer_domain,
								CASE referrer_domain
									WHEN url_domain THEN '1'
									ELSE '0'
								END AS same_domain_flg,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	user_agent_kbn = 'PC'
						GROUP BY referrer_domain, url_domain
					) a
				GROUP BY referrer_domain, same_domain_flg
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts,
				reserved1
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts,
						same_domain_flg
				  FROM	@tmp_table
		
		---------------------------------------
		-- リファラードメインサマリ作成（スマートフォン）
		---------------------------------------
		SET @SUMMARY_KBN = 'refdomain_sp'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- リファラードメイン数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts,
					same_domain_flg
				)
				SELECT	a.referrer_domain,
						SUM(a.count) AS count,
						a.same_domain_flg
				FROM	(
						SELECT 	referrer_domain,
								CASE referrer_domain
									WHEN url_domain THEN '1'
									ELSE '0'
								END AS same_domain_flg,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	user_agent_kbn = 'SP'
						GROUP BY referrer_domain, url_domain
					) a
				GROUP BY referrer_domain, same_domain_flg
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts,
				reserved1
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts,
						same_domain_flg
				  FROM	@tmp_table
	END

	---------------------------------------
	-- カーソル閉じる
	---------------------------------------
	CLOSE CUR_DEPTID
	DEALLOCATE CUR_DEPTID
GO

 if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateSummarySrchEngineSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateSummarySrchEngineSp]
GO
/*
=========================================================================================================
  Module      : 検索エンジン作成プロシージャ(w2_CreateSummarySrchEngineSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateSummarySrchEngineSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @DEPT_ID nvarchar(30)
	DECLARE @SUMMARY_KBN nvarchar(30)
	DECLARE @TGT_YEAR nvarchar(4)
	DECLARE @TGT_MONTH nvarchar(2)
	DECLARE @TGT_DAY nvarchar(2)
	
	DECLARE @tmp_table TABLE(
		[value_name] [nvarchar] (1000) NOT NULL DEFAULT (N''),
		[counts] [bigint] NOT NULL DEFAULT (0)
	)

	---------------------------------------
	-- dept_idカーソル定義
	---------------------------------------
	DECLARE CUR_DEPTID CURSOR FOR
	SELECT	DISTINCT dept_id
	  FROM	w2_AccessLogAccount

	---------------------------------------
	-- 日付分割
	---------------------------------------
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)

	---------------------------------------
	-- 識別IDカーソル開く・最終行までループ
	---------------------------------------
	OPEN CUR_DEPTID

	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- dept_id取得
		---------------------------------------
		FETCH NEXT FROM	CUR_DEPTID
		  INTO	@DEPT_ID

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		-- 各検索エンジン数サマリ作成（PC）
		---------------------------------------
		SET @SUMMARY_KBN = 'srchengine'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- 各検索エンジン数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.search_engine,
						SUM(a.count) AS count
				FROM	(
						SELECT 	search_engine,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	search_engine <> ''
						   AND	user_agent_kbn = 'PC'
						GROUP BY search_engine, url_domain
					) a
				GROUP BY search_engine
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
		
		---------------------------------------
		-- 各検索エンジン数サマリ作成（スマートフォン）
		---------------------------------------
		SET @SUMMARY_KBN = 'srchengine_sp'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- 各検索エンジン数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.search_engine,
						SUM(a.count) AS count
				FROM	(
						SELECT 	search_engine,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	search_engine <> ''
						   AND	user_agent_kbn = 'SP'
						GROUP BY search_engine, url_domain
					) a
				GROUP BY search_engine
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
	END

	---------------------------------------
	-- カーソル閉じる
	---------------------------------------
	CLOSE CUR_DEPTID
	DEALLOCATE CUR_DEPTID
GO

  if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateSummarySrchWordsSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateSummarySrchWordsSp]
GO
/*
=========================================================================================================
  Module      : 検索エンジン検索ワード作成プロシージャ(w2_CreateSummarySrchWordsSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateSummarySrchWordsSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @DEPT_ID nvarchar(30)
	DECLARE @SUMMARY_KBN nvarchar(30)
	DECLARE @TGT_YEAR nvarchar(4)
	DECLARE @TGT_MONTH nvarchar(2)
	DECLARE @TGT_DAY nvarchar(2)
	
	DECLARE @tmp_table TABLE(
		[value_name] [nvarchar] (1000) NOT NULL DEFAULT (N''),
		[counts] [bigint] NOT NULL DEFAULT (0)
	)

	---------------------------------------
	-- dept_idカーソル定義
	---------------------------------------
	DECLARE CUR_DEPTID CURSOR FOR
	SELECT	DISTINCT dept_id
	  FROM	w2_AccessLogAccount

	---------------------------------------
	-- 日付分割
	---------------------------------------
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)

	---------------------------------------
	-- 識別IDカーソル開く・最終行までループ
	---------------------------------------
	OPEN CUR_DEPTID

	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- dept_id取得
		---------------------------------------
		FETCH NEXT FROM	CUR_DEPTID
		  INTO	@DEPT_ID

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		-- 各検索ワード数サマリ作成（PC）
		---------------------------------------
		SET @SUMMARY_KBN = 'srchwords'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- 各検索ワード数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.search_words,
						SUM(a.count) AS count
				FROM	(
						SELECT 	search_words,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	search_words <> ''
						   AND	user_agent_kbn = 'PC'
						GROUP BY search_words, url_domain
					) a
				GROUP BY search_words
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
		
		---------------------------------------
		-- 各検索ワード数サマリ作成（スマートフォン）
		---------------------------------------
		SET @SUMMARY_KBN = 'srchwords_sp'
		
		-- 初期化
		DELETE FROM @tmp_table
		
		-- 各検索ワード数取得・仮テーブルに格納
		INSERT
		  INTO	@tmp_table
				(
					value_name,
					counts
				)
				SELECT	a.search_words,
						SUM(a.count) AS count
				FROM	(
						SELECT 	search_words,
								count(*) AS count
						  FROM	w2_AccessLog
						 WHERE	dept_id = @DEPT_ID
						   AND	access_date = @TARGET_DATE
						   AND	search_words <> ''
						   AND	user_agent_kbn = 'SP'
						GROUP BY search_words, url_domain
					) a
				GROUP BY search_words
				ORDER BY count DESC
		
		-- デリート
		DELETE
		  FROM	w2_DispSummaryAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	summary_kbn = @SUMMARY_KBN
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY
		
		-- インサート
		INSERT
		  INTO	w2_DispSummaryAnalysis
				(
				dept_id,
				summary_kbn,
				tgt_year,
				tgt_month,
				tgt_day,
				value_name,
				counts
				)
				SELECT	@DEPT_ID,
						@SUMMARY_KBN,
						@TGT_YEAR,
						@TGT_MONTH,
						@TGT_DAY,
						value_name,
						counts
				  FROM	@tmp_table
	END

	---------------------------------------
	-- カーソル閉じる
	---------------------------------------
	CLOSE CUR_DEPTID
	DEALLOCATE CUR_DEPTID
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateUserAccessDataSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateUserAccessDataSp]
GO
/*
=========================================================================================================
  Module      : 日次ユーザアクセスデータ作成プロシージャ(w2_CreateUserAccessDataSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateUserAccessDataSp] (
					@TARGET_DATE varchar(10)) AS

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @TOTAL_PAGEVIEWS bigint
	DECLARE @TOTAL_USERS bigint
	DECLARE @TOTAL_SESSIONS bigint
	DECLARE @TOTAL_NEW_USERS bigint
	DECLARE @TOTAL_PAGEVIEWS_MOBILE bigint
	DECLARE @TOTAL_SESSIONS_MOBILE bigint
	DECLARE @DEPT_ID varchar(30)

	---------------------------------------
	-- dept_idカーソル定義
	---------------------------------------
	DECLARE CUR_DEPTID CURSOR FOR
	SELECT	DISTINCT dept_id
	  FROM	w2_AccessLogAccount

	---------------------------------------
	-- 日付分割
	---------------------------------------
	DECLARE @TGT_YEAR varchar(4)
	DECLARE @TGT_MONTH varchar(2)
	DECLARE @TGT_DAY varchar(2)
	SET @TGT_YEAR = SUBSTRING(@TARGET_DATE, 0, 5)
	SET @TGT_MONTH = SUBSTRING(@TARGET_DATE, 6, 2)
	SET @TGT_DAY = SUBSTRING(@TARGET_DATE, 9, 2)

	---------------------------------------
	-- カーソル開く・最終行までループ
	---------------------------------------
	OPEN CUR_DEPTID

	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- dept_id取得
		---------------------------------------
		FETCH NEXT FROM	CUR_DEPTID
		  INTO	@DEPT_ID

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		--レコード削除（デリートインサートのため）
		---------------------------------------
		DELETE	w2_DispAccessAnalysis
		 WHERE	dept_id = @DEPT_ID
		   AND	tgt_year = @TGT_YEAR
		   AND	tgt_month = @TGT_MONTH
		   AND	tgt_day = @TGT_DAY

		---------------------------------------
		-- ＰＣ：ページビュー数取得
		---------------------------------------
		SELECT	@TOTAL_PAGEVIEWS = COUNT(*)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'PC'

		---------------------------------------
		-- ＰＣ：ユーザー数取得
		---------------------------------------
		SELECT	@TOTAL_USERS = COUNT(DISTINCT access_user_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'PC'
		
		---------------------------------------
		-- ＰＣ：訪問者数（セッション数）取得
		---------------------------------------
		SELECT	@TOTAL_SESSIONS = COUNT(DISTINCT session_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
 		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'PC'

		---------------------------------------
		-- ＰＣ：新規訪問ユーザー数取得
		---------------------------------------
		SELECT	@TOTAL_NEW_USERS = COUNT(DISTINCT access_user_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
 		   AND	dept_id = @DEPT_ID
 		   AND	access_interval = -1	-- 初回アクセス
		   AND	user_agent_kbn = 'PC'

		---------------------------------------
		-- ＰＣ：レコード挿入
		---------------------------------------
		-- インサート
		INSERT w2_DispAccessAnalysis
			(
			dept_id,
			tgt_year,
			tgt_month,
			tgt_day,
			access_kbn,
			total_page_views,
			total_users,
			total_sessions,
			total_new_users
			)
		VALUES
			(
			@DEPT_ID,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			'0',	-- PC
			@TOTAL_PAGEVIEWS,
			@TOTAL_USERS,
			@TOTAL_SESSIONS,
			@TOTAL_NEW_USERS
			)
			
		---------------------------------------
		-- モバイル：ページビュー数取得
		---------------------------------------
		SELECT	@TOTAL_PAGEVIEWS_MOBILE = COUNT(*)
		  FROM	w2_AccessLogMobile
		 WHERE	access_date = @TARGET_DATE
		   AND	dept_id = @DEPT_ID

		---------------------------------------
		-- モバイル：訪問者数（セッション数）取得
		---------------------------------------
		SELECT	@TOTAL_SESSIONS_MOBILE = COUNT(DISTINCT session_id)
		  FROM	w2_AccessLogMobile
		 WHERE	access_date = @TARGET_DATE
 		   AND	dept_id = @DEPT_ID
			
		---------------------------------------
		-- モバイル：レコード挿入
		---------------------------------------
		-- インサート
		INSERT w2_DispAccessAnalysis
			(
			dept_id,
			tgt_year,
			tgt_month,
			tgt_day,
			access_kbn,
			total_page_views,
			total_sessions
			)
		VALUES
			(
			@DEPT_ID,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			'1',	-- モバイル
			@TOTAL_PAGEVIEWS_MOBILE,
			@TOTAL_SESSIONS_MOBILE
			)

		---------------------------------------
		-- スマートフォン：ページビュー数取得
		---------------------------------------
		SELECT	@TOTAL_PAGEVIEWS = COUNT(*)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'SP'

		---------------------------------------
		-- スマートフォン：ユーザー数取得
		---------------------------------------
		SELECT	@TOTAL_USERS = COUNT(DISTINCT access_user_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'SP'
		
		---------------------------------------
		-- スマートフォン：訪問者数（セッション数）取得
		---------------------------------------
		SELECT	@TOTAL_SESSIONS = COUNT(DISTINCT session_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
 		   AND	dept_id = @DEPT_ID
		   AND	user_agent_kbn = 'SP'

		---------------------------------------
		-- スマートフォン：新規訪問ユーザー数取得
		---------------------------------------
		SELECT	@TOTAL_NEW_USERS = COUNT(DISTINCT access_user_id)
		  FROM	w2_AccessLog
		 WHERE	access_date = @TARGET_DATE
 		   AND	dept_id = @DEPT_ID
 		   AND	access_interval = -1	-- 初回アクセス
		   AND	user_agent_kbn = 'SP'

		---------------------------------------
		-- スマートフォン：レコード挿入
		---------------------------------------
		-- インサート
		INSERT w2_DispAccessAnalysis
			(
			dept_id,
			tgt_year,
			tgt_month,
			tgt_day,
			access_kbn,
			total_page_views,
			total_users,
			total_sessions,
			total_new_users
			)
		VALUES
			(
			@DEPT_ID,
			@TGT_YEAR,
			@TGT_MONTH,
			@TGT_DAY,
			'2',	-- スマートフォン
			@TOTAL_PAGEVIEWS,
			@TOTAL_USERS,
			@TOTAL_SESSIONS,
			@TOTAL_NEW_USERS
			)
	END

	---------------------------------------
	-- カーソル閉じる
	---------------------------------------
	CLOSE CUR_DEPTID
	DEALLOCATE CUR_DEPTID
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[w2_CreateUserMasterSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[w2_CreateUserMasterSp]
GO
/*
=========================================================================================================
  Module      : ユーザマスタ作成プロシージャ(w2_CreateUserMasterSp.sql)
 ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2009 All Rights Reserved.
=========================================================================================================
*/
CREATE PROCEDURE [dbo].[w2_CreateUserMasterSp] (@TARGET_DATE varchar(10)) AS
	---------------------------------------
	-- 定数定義
	---------------------------------------
	DECLARE @KBN_ACTION_LOGIN varchar(20)
	DECLARE @KBN_ACTION_LEAVE varchar(20)
	SET @KBN_ACTION_LOGIN = '__login'
	SET @KBN_ACTION_LEAVE = '__leave'

	---------------------------------------
	-- 変数定義
	---------------------------------------
	DECLARE @TMP_COUNT int

	-- カーソルデータ格納用
	DECLARE @VAL_ACCESS_DATE varchar(20)
	DECLARE @VAL_ACCESS_TIME varchar(20)
	DECLARE @VAL_CLIENT_IP varchar(20)
	DECLARE @VAL_SERVER_NAME varchar(20)
	DECLARE @VAL_SERVER_IP varchar(20)
	DECLARE @VAL_SERVER_PORT int
	DECLARE @VAL_PROTOCOL_STATUS int
	DECLARE @VAL_USER_AGENT varchar(512)
	DECLARE @VAL_URL_DOMAIN varchar(50)
	DECLARE @VAL_URL_PAGE varchar(100)
	DECLARE @VAL_URL_PARAM varchar(2000)
	DECLARE @VAL_DEPT_ID nvarchar(30)
	DECLARE @VAL_ACCOUNT_ID nvarchar(30)
	DECLARE @VAL_ACCESS_USER_ID varchar(255)
	DECLARE @VAL_SESSION_ID varchar(255)
	DECLARE @VAL_REAL_USER_ID varchar(50)
	DECLARE @VAL_FIRST_LOGIN_FLG varchar(2)
	DECLARE @VAL_REFERRER_DOMAIN varchar(50)
	DECLARE @VAL_REFERRER_PAGE varchar(100)
	DECLARE @VAL_REFERRER_PARAM varchar(2000)
	DECLARE @VAL_ACTION_KBN varchar(20)
	DECLARE @VAL_S1 varchar(20)
	DECLARE @VAL_S2 varchar(20)
	DECLARE @VAL_S3 varchar(20)
	DECLARE @VAL_S4 varchar(20)
	DECLARE @VAL_S5 varchar(20)
	DECLARE @VAL_S6 varchar(20)
	DECLARE @VAL_S7 varchar(20)
	DECLARE @VAL_S8 varchar(20)
	DECLARE @VAL_S9 varchar(20)
	DECLARE @VAL_S10 varchar(20)
	DECLARE @VAL_S11 varchar(50)
	DECLARE @VAL_S12 varchar(50)
	DECLARE @VAL_S13 varchar(50)
	DECLARE @VAL_S14 varchar(50)
	DECLARE @VAL_S15 varchar(50)
	DECLARE @VAL_S16 varchar(50)
	DECLARE @VAL_S17 varchar(50)
	DECLARE @VAL_S18 varchar(50)
	DECLARE @VAL_S19 varchar(50)
	DECLARE @VAL_S20 varchar(50)
	DECLARE @VAL_P1 varchar(20)
	DECLARE @VAL_P2 varchar(20)
	DECLARE @VAL_P3 varchar(20)
	DECLARE @VAL_P4 varchar(20)
	DECLARE @VAL_P5 varchar(20)
	DECLARE @VAL_P6 varchar(20)
	DECLARE @VAL_P7 varchar(20)
	DECLARE @VAL_P8 varchar(20)
	DECLARE @VAL_P9 varchar(20)
	DECLARE @VAL_P10 varchar(20)
	DECLARE @VAL_P11 varchar(50)
	DECLARE @VAL_P12 varchar(50)
	DECLARE @VAL_P13 varchar(50)
	DECLARE @VAL_P14 varchar(50)
	DECLARE @VAL_P15 varchar(50)
	DECLARE @VAL_P16 varchar(50)
	DECLARE @VAL_P17 varchar(50)
	DECLARE @VAL_P18 varchar(50)
	DECLARE @VAL_P19 varchar(50)
	DECLARE @VAL_P20 varchar(50)
	DECLARE @VAL_USER_AGENT_KBN varchar(10)

	---------------------------------------
	-- カーソル定義
	---------------------------------------
	DECLARE CUR_ACCESSLOG CURSOR FOR
	SELECT	access_date,
			access_time,
			client_ip,
			server_name,
			server_ip,
			server_port,
			protocol_status,
			user_agent,
			url_domain,
			url_page,
			url_param,
			dept_id,
			account_id,
			access_user_id,
			session_id,
			real_user_id,
			first_login_flg,
			referrer_domain,
			referrer_page,
			referrer_param,
			action_kbn,
			s1,
			s2,
			s3,
			s4,
			s5,
			s6,
			s7,
			s8,
			s9,
			s10,
			s11,
			s12,
			s13,
			s14,
			s15,
			s16,
			s17,
			s18,
			s19,
			s20,
			p1,
			p2,
			p3,
			p4,
			p5,
			p6,
			p7,
			p8,
			p9,
			p10,
			p11,
			p12,
			p13,
			p14,
			p15,
			p16,
			p17,
			p18,
			p19,
			p20,
			user_agent_kbn
	  FROM	w2_AccessLog
	 WHERE	access_date = @TARGET_DATE

	---------------------------------------
	-- 開く
	---------------------------------------
	OPEN CUR_ACCESSLOG

	---------------------------------------
	-- 最終行までループ
	---------------------------------------
	WHILE (1=1)
	BEGIN
		---------------------------------------
		-- ①一行を取り出して変数に代入する
		---------------------------------------
		FETCH NEXT FROM CUR_ACCESSLOG
			INTO	@VAL_ACCESS_DATE,
					@VAL_ACCESS_TIME,
					@VAL_CLIENT_IP,
					@VAL_SERVER_NAME,
					@VAL_SERVER_IP,
					@VAL_SERVER_PORT,
					@VAL_PROTOCOL_STATUS,
					@VAL_USER_AGENT,
					@VAL_URL_DOMAIN,
					@VAL_URL_PAGE,
					@VAL_URL_PARAM,
					@VAL_DEPT_ID,
					@VAL_ACCOUNT_ID,
					@VAL_ACCESS_USER_ID,
					@VAL_SESSION_ID,
					@VAL_REAL_USER_ID,
					@VAL_FIRST_LOGIN_FLG,
					@VAL_REFERRER_DOMAIN,
					@VAL_REFERRER_PAGE,
					@VAL_REFERRER_PARAM,
					@VAL_ACTION_KBN,
					@VAL_S1,
					@VAL_S2,
					@VAL_S3,
					@VAL_S4,
					@VAL_S5,
					@VAL_S6,
					@VAL_S7,
					@VAL_S8,
					@VAL_S9,
					@VAL_S10,
					@VAL_S11,
					@VAL_S12,
					@VAL_S13,
					@VAL_S14,
					@VAL_S15,
					@VAL_S16,
					@VAL_S17,
					@VAL_S18,
					@VAL_S19,
					@VAL_S20,
					@VAL_P1,
					@VAL_P2,
					@VAL_P3,
					@VAL_P4,
					@VAL_P5,
					@VAL_P6,
					@VAL_P7,
					@VAL_P8,
					@VAL_P9,
					@VAL_P10,
					@VAL_P11,
					@VAL_P12,
					@VAL_P13,
					@VAL_P14,
					@VAL_P15,
					@VAL_P16,
					@VAL_P17,
					@VAL_P18,
					@VAL_P19,
					@VAL_P20,
					@VAL_USER_AGENT_KBN

		-- 終端なら抜ける
		IF @@FETCH_STATUS != 0
		BEGIN
			BREAK
		END
		
		---------------------------------------
		-- ②ユーザマスタ更新処理（潜在・認知両方）
		---------------------------------------
		IF @VAL_ACCESS_USER_ID <> ''
		BEGIN
			-- INSERT/UPDATE判定
			SELECT	@TMP_COUNT = COUNT(*)
			  FROM	w2_AccessUserMaster
			 WHERE	dept_id = @VAL_DEPT_ID
			   AND	access_user_id = @VAL_ACCESS_USER_ID

			---------------------------------------
			--- ユーザマスタインサート処理
			---------------------------------------
			IF @TMP_COUNT = 0
			BEGIN
				-- 潜在ユーザインサート
				INSERT w2_AccessUserMaster
					(
					dept_id,
					access_user_id,
					user_id,
					first_acc_date,
					last_acc_date,
					recognized_date)
				VALUES(
					@VAL_DEPT_ID,
					@VAL_ACCESS_USER_ID,
					'',
					@VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME,
					@VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME,
					NULL
				)
				
				-- ウェイトをかける
				WAITFOR DELAY '00:00:00.010';
			END
			---------------------------------------
			-- ユーザマスタアップデート処理
			---------------------------------------
			ELSE
			BEGIN
				-- 潜在ユーザアップデート
				UPDATE	w2_AccessUserMaster
				   SET	last_acc_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
				 WHERE	dept_id = @VAL_DEPT_ID
				   AND	access_user_id = @VAL_ACCESS_USER_ID
			END
		END
		
		---------------------------------------
		-- ③認知顧客マスタ更新処理：認知顧客のみ
		---------------------------------------
		IF @VAL_REAL_USER_ID <> ''
		BEGIN
			-- INSERT/UPDATE判定
			SELECT	@TMP_COUNT = COUNT(*)
			  FROM 	w2_AccessRecUserMaster
			 WHERE	dept_id = @VAL_DEPT_ID
			   AND	user_id = @VAL_REAL_USER_ID

			---------------------------------------
			-- 認知顧客インサート処理
			---------------------------------------
			IF @TMP_COUNT = 0
			BEGIN
				-- 認知顧客インサート
				INSERT w2_AccessRecUserMaster
					(
					dept_id,
					user_id,
					last_acc_date,
					recognized_date,
					leave_date,
					last_login_date)
				VALUES(
					@VAL_DEPT_ID,
					@VAL_REAL_USER_ID,
					@VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME,
					@VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME,
					NULL,
					@VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
					)
					
				-- ウェイトをかける
				WAITFOR DELAY '00:00:00.010';

				-- ユーザマスタ紐付け更新
				UPDATE	w2_AccessUserMaster
				   SET	user_id = @VAL_REAL_USER_ID,
						recognized_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
				 WHERE	dept_id = @VAL_DEPT_ID
				   AND	access_user_id = @VAL_ACCESS_USER_ID

			END
			---------------------------------------
			-- 認知顧客アップデート処理
			---------------------------------------
			ELSE
			BEGIN
				-- 認知顧客アップデート（アクセス日）
				UPDATE	w2_AccessRecUserMaster
				   SET	last_acc_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
				 WHERE	dept_id = @VAL_DEPT_ID
				   AND	user_id = @VAL_REAL_USER_ID

				-- クライアント側でユーザIDのクッキーが初めて保存されたときにこのフラグが立つ。
				-- ユーザが別マシンへアクセスしたとき、実際は認知顧客であってもログインするまでは
				-- (ユーザIDクッキーがないので)潜在ユーザとして識別されてしまう。
				-- ここでログインを行ったとき、ユーザテーブルに既にレコードがあるのでアップデート処理となるが、
				-- 潜在ユーザのレコードにユーザIDを紐づけてやる必要が出てくる。
				-- ※ユーザマスタと潜在顧客マスタとの間には多対一の関係が成り立つ。
				IF @VAL_FIRST_LOGIN_FLG = '1'
				BEGIN
					-- 更新判定
					SELECT	@TMP_COUNT = COUNT(*)
					  FROM	w2_AccessUserMaster
					 WHERE	dept_id = @VAL_DEPT_ID
					   AND	user_id = @VAL_REAL_USER_ID

					-- 新たにユーザIDを紐づける
					IF  @TMP_COUNT = 0
					BEGIN
						-- ユーザID紐付け更新
						UPDATE	w2_AccessUserMaster
						   SET	user_id = @VAL_REAL_USER_ID,
								recognized_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
						 WHERE	dept_id = @VAL_DEPT_ID
						   AND	access_user_id = @VAL_ACCESS_USER_ID
					END
				END
			END

			---------------------------------------
			-- 認知顧客共通処理
			---------------------------------------
			-- ログオン判定
			IF @VAL_ACTION_KBN = @KBN_ACTION_LOGIN
			BEGIN
				-- 認知顧客アップデート（ログイン日付）
				UPDATE	w2_AccessRecUserMaster
				   SET	last_login_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
				 WHERE	dept_id = @VAL_DEPT_ID
				   AND	user_id = @VAL_REAL_USER_ID
			END
			-- 退会判定
			IF @VAL_ACTION_KBN = @KBN_ACTION_LEAVE
			BEGIN
				-- 認知顧客アップデート（退会日付）
				UPDATE	w2_AccessRecUserMaster
				   SET	leave_date = @VAL_ACCESS_DATE + ' ' + @VAL_ACCESS_TIME
				 WHERE	dept_id = @VAL_DEPT_ID
				   AND	user_id = @VAL_REAL_USER_ID
			END

		END -- 潜在ユーザ・認知顧客データ更新

		-- ウェイトをかける
		WAITFOR DELAY '00:00:00.010';

	END -- WHILE (1=1) 行ごと

	---------------------------------------
	-- 閉じる
	---------------------------------------
	CLOSE CUR_ACCESSLOG
	DEALLOCATE CUR_ACCESSLOG

GO

			]]>
    </Statement>
  </Up>
</Migration>
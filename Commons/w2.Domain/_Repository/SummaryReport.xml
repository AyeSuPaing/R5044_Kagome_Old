<?xml version="1.0" encoding="utf-8" ?>
<!--
=========================================================================================================
  Module      : Summary Report SQL statement XML (SummaryReport.xml)
  ･･･････････････････････････････････････････････････････････････････････････････････････････････････････
  Copyright   : Copyright W2 Co.,Ltd. 2021 All Rights Reserved.
=========================================================================================================
-->
<SummaryReport>

  <!-- Get summary reports by period kbn-->
  <GetSummaryReportsByPeriodKbn>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        SELECT  w2_SummaryReport.*
          FROM  w2_SummaryReport
         WHERE  w2_SummaryReport.period_kbn = @period_kbn
           AND  w2_SummaryReport.report_date >= @start_date
           AND  w2_SummaryReport.report_date < @end_date
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="start_date" Type="datetime" />   
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </GetSummaryReportsByPeriodKbn>

  <!-- Insert user access summary report by day -->
  <InsertUserAccessSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        SELECT  @report_data = [[ SELECT_SUMMARY_USER_ACCESS_REPORT ]]
          FROM  w2_DispAccessAnalysis
                [[ SUMMARY_USER_ACCESS_REPORT_WHERE_CONDITION ]]
           AND  CAST(w2_DispAccessAnalysis.tgt_day AS INT) = @tgt_day

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserAccessSummaryReportByDay>

  <!-- Insert user access summary report by month -->
  <InsertUserAccessSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        SELECT  @report_data = [[ SELECT_SUMMARY_USER_ACCESS_REPORT ]]
          FROM  w2_DispAccessAnalysis
                [[ SUMMARY_USER_ACCESS_REPORT_WHERE_CONDITION ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserAccessSummaryReportByMonth>

  <!-- Insert order count summary report by day -->
  <InsertOrderCountSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_ORDER_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertOrderCountSummaryReportByDay>

  <!-- Insert order amount summary report by day -->
  <InsertOrderAmountSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_ORDER_AMOUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertOrderAmountSummaryReportByDay>

  <!-- Insert order count summary report by month -->
  <InsertOrderCountSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_ORDER_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertOrderCountSummaryReportByMonth>

  <!-- Insert order amount summary report by month -->
  <InsertOrderAmountSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_ORDER_AMOUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertOrderAmountSummaryReportByMonth>

  <!-- Insert conversion summary report by day -->
  <InsertConversionSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_CONVERSION_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertConversionSummaryReportByDay>

  <!-- Insert conversion summary report by month -->
  <InsertConversionSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_CONVERSION_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertConversionSummaryReportByMonth>

  <!-- Insert ltv summary report by day -->
  <InsertLtvSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_LTV_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertLtvSummaryReportByDay>

  <!-- Insert ltv summary report by month -->
  <InsertLtvSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_LTV_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertLtvSummaryReportByMonth>

  <!-- Insert fixed purchase register summary report by day -->
  <InserFixedPurchaseRegisterSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_REGISTER_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InserFixedPurchaseRegisterSummaryReportByDay>

  <!-- Insert fixed purchase cancel summary report by day -->
  <InserFixedPurchaseCancelSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_CANCEL_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InserFixedPurchaseCancelSummaryReportByDay>

  <!-- Insert order fixed purchase register summary report by month -->
  <InsertFixedPurchaseRegisterSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_REGISTER_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertFixedPurchaseRegisterSummaryReportByMonth>

  <!-- Insert order fixed purchase cancel summary report by month -->
  <InsertFixedPurchaseCancelSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_CANCEL_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertFixedPurchaseCancelSummaryReportByMonth>

  <!-- Insert user register summary report by day -->
  <InsertUserRegisterSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_USER_REGISTER_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserRegisterSummaryReportByDay>

  <!-- Insert user withdrawal summary report by day -->
  <InsertUserWithdrawalSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_USER_WITHDRAWAL_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserWithdrawalSummaryReportByDay>

  <!-- Insert user register summary report by month -->
  <InsertUserRegisterSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_USER_REGISTER_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserRegisterSummaryReportByMonth>

  <!-- Insert user Withdrawal summary report by month -->
  <InsertUserWithdrawalSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_USER_WITHDRAWAL_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertUserWithdrawalSummaryReportByMonth>

  <!-- Insert membership count summary report by day -->
  <InsertMembershipCountSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_MEMBERSHIP_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertMembershipCountSummaryReportByDay>

  <!-- Insert membership count summary report by month -->
  <InsertMembershipCountSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_MEMBERSHIP_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertMembershipCountSummaryReportByMonth>

  <!-- Insert fixed purchase count summary report by day -->
  <InsertFixedPurchaseCountSummaryReportByDay>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertFixedPurchaseCountSummaryReportByDay>

  <!-- Insert fixed purchase count summary report by month -->
  <InsertFixedPurchaseCountSummaryReportByMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_MONTH_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_MONTH ]]

        -- Set report data
        [[ SELECT_SUMMARY_FIXED_PURCHASE_COUNT_REPORT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_MONTH ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertFixedPurchaseCountSummaryReportByMonth>

  <!-- Get product stock  for report -->
  <GetProductStockForReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        SELECT  '0' AS stock_alert_kbn,
                ISNULL(SUM(w2_ProductView.stock * w2_ProductView.price), 0) AS field_custom
          FROM  w2_ProductView
         WHERE  1 = 1
                [[ PRODUCTSTOCK_WHERE_CONDITION_FOR_REPORT ]]
           AND  w2_ProductView.stock > 0
        UNION ALL
        SELECT  '1' AS stock_alert_kbn,
                ISNULL(COUNT(w2_ProductView.variation_id), 0) AS field_custom
          FROM  w2_ProductView
         WHERE  1 = 1
                [[ PRODUCTSTOCK_WHERE_CONDITION_FOR_REPORT ]]
           AND  w2_ProductView.stock_alert > w2_ProductView.stock
        UNION ALL
        SELECT  '2' AS stock_alert_kbn,
                ISNULL(COUNT(w2_ProductView.variation_id), 0) AS field_custom
          FROM  w2_ProductView
         WHERE  1 = 1
                [[ PRODUCTSTOCK_WHERE_CONDITION_FOR_REPORT ]]
           AND  w2_ProductView.stock_management_kbn = 2
           AND  w2_ProductView.stock <= 0
      ]]>
    </Statement>
    <Parameter>
      <Input Name="shop_id" Type="nvarchar" Size="10" />
    </Parameter>
  </GetProductStockForReport>

  <!-- Count latest user registered for report -->
  <CountLatestUserRegisteredForReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        SELECT  'PC' AS user_kbn,
                COUNT(w2_User.user_id) AS row_count
          FROM  w2_User
         WHERE  w2_User.user_kbn IN ('PC_USER', 'PC_GEST')
                [[ LATEST_REPORT_REGISTERED_USER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'SP' AS user_kbn,
                COUNT(w2_User.user_id) AS row_count
          FROM  w2_User
         WHERE  w2_User.user_kbn IN ('SP_USER', 'SP_GEST')
                [[ LATEST_REPORT_REGISTERED_USER_SEARCH_WHERE ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </CountLatestUserRegisteredForReport>

  <!-- Count order shipped status for daily report -->
  <CountOrderShippedStatusForDailyReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        DECLARE  @current_date datetime
        SET  @current_date = CONVERT(DATE, GETDATE())

        SELECT  'UNSHIPPED' AS order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
                [[ INNER_JOIN_ORDERSHIPPING_FOR_COUNT_ORDER_SHIPPED_STATUS_DAILY_REPORT ]]
         WHERE  w2_OrderShipping.scheduled_shipping_date < @current_date
                [[ ORDER_SHIPPED_STATUS_DAILY_REPORT_SEARCH_WHERE ]]
           AND  w2_ordershipping.order_shipping_no = '1'
        UNION ALL
        SELECT  'SHIPPEDTODAY' AS order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
                [[ INNER_JOIN_ORDERSHIPPING_FOR_COUNT_ORDER_SHIPPED_STATUS_DAILY_REPORT ]]
         WHERE  w2_OrderShipping.scheduled_shipping_date = @current_date
                [[ ORDER_SHIPPED_STATUS_DAILY_REPORT_SEARCH_WHERE ]]
           AND  w2_ordershipping.order_shipping_no = '1'
        UNION ALL
        SELECT  'SHIPPEDFUTURE' AS order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
                [[ INNER_JOIN_ORDERSHIPPING_FOR_COUNT_ORDER_SHIPPED_STATUS_DAILY_REPORT ]]
         WHERE  w2_OrderShipping.scheduled_shipping_date > @current_date
                [[ ORDER_SHIPPED_STATUS_DAILY_REPORT_SEARCH_WHERE ]]
           AND  w2_ordershipping.order_shipping_no = '1'
      ]]>
    </Statement>
  </CountOrderShippedStatusForDailyReport>

  <!-- Count order status for monthly report -->
  <CountOrderStatusForMonthlyReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        DECLARE @begin_date datetime
        DECLARE @end_date datetime
        DECLARE @current_date datetime
        SET @current_date = GETDATE();
        SET @begin_date = DATEFROMPARTS(YEAR(@current_date), MONTH(@current_date), 1);
        SET @end_date = DATEADD(MONTH, 1, @begin_date)

        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'TMP'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_date IS NOT NULL
      GROUP BY  w2_Order.order_status
        UNION ALL
        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'ODR'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_date IS NOT NULL
      GROUP BY  w2_Order.order_status
        UNION ALL
        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) as row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'ODR_RECG'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_recognition_date IS NOT NULL
      GROUP BY  w2_Order.order_status
        UNION ALL
        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'STK_RSVD'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_stockreserved_date IS NOT NULL
      GROUP BY  w2_Order.order_status
        UNION ALL
        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'SHP_ARGD'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_shipping_date IS NOT NULL
      GROUP BY  w2_Order.order_status
        UNION ALL
        SELECT  w2_Order.order_status,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_status = 'SHP_COMP'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_Order.order_shipped_date IS NOT NULL
           AND  w2_Order.order_shipped_date >= @begin_date
           AND  w2_Order.order_shipped_date < @end_date
      GROUP BY  w2_Order.order_status
      ]]>
    </Statement>
  </CountOrderStatusForMonthlyReport>

  <!-- Count latest order amount for report -->
  <CountLatestOrderAmountForReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        SELECT  'PC' AS order_kbn,
                ISNULL(SUM(w2_Order.order_price_total), 0) AS order_price_total
          FROM  w2_Order
         WHERE  w2_Order.order_kbn = 'PC'
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'SP' AS order_kbn,
                ISNULL(SUM(w2_Order.order_price_total), 0) AS order_price_total
          FROM  w2_Order
         WHERE  w2_Order.order_kbn = 'SP'
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'Other' AS order_kbn,
                ISNULL(SUM(w2_Order.order_price_total), 0) AS order_price_total
          FROM  w2_Order
         WHERE  w2_Order.order_kbn NOT IN ('PC','SP')
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </CountLatestOrderAmountForReport>

  <!-- Count latest order for report -->
  <CountLatestOrderForReport>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        SELECT  'PC' AS order_kbn,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_kbn = 'PC'
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'SP' AS order_kbn,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_kbn = 'SP'
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'Other' AS order_kbn,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.order_kbn NOT IN ('PC','SP')
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'Normal' AS order_kbn,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.fixed_purchase_id = ''
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
        UNION ALL
        SELECT  'FixedPurchase' AS order_kbn,
                COUNT(w2_Order.order_id) AS row_count
          FROM  w2_Order
         WHERE  w2_Order.fixed_purchase_id <> ''
                [[ LATEST_REPORT_ORDER_SEARCH_WHERE ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </CountLatestOrderForReport>

  <!-- Get order workflow setting all list for report -->
  <GetOrderWorkflowSettingAllListForReport>
    <Statement>
      <![CDATA[
        SELECT  Workflow.*
          FROM  (
                  SELECT  'order' AS workflow_type,
                          w2_OrderWorkflowSetting.shop_id,
                          w2_OrderWorkflowSetting.workflow_kbn,
                          w2_OrderWorkflowSetting.workflow_no,
                          w2_OrderWorkflowSetting.workflow_name,
                          w2_OrderWorkflowSetting.display_order
                    FROM  w2_OrderWorkflowSetting
                   WHERE  w2_OrderWorkflowSetting.valid_flg = '1'
                     AND  w2_OrderWorkflowSetting.workflow_detail_kbn <> 'ODR_IMP'
                  UNION ALL
                  SELECT  'fixed_purchase' AS workflow_type,
                          w2_FixedPurchaseWorkflowSetting.shop_id,
                          w2_FixedPurchaseWorkflowSetting.workflow_kbn,
                          w2_FixedPurchaseWorkflowSetting.workflow_no,
                          w2_FixedPurchaseWorkflowSetting.workflow_name,
                          w2_FixedPurchaseWorkflowSetting.display_order
                    FROM  w2_FixedPurchaseWorkflowSetting
                   WHERE  w2_FixedPurchaseWorkflowSetting.valid_flg = '1'
                     AND  w2_FixedPurchaseWorkflowSetting.workflow_detail_kbn <> 'ODR_IMP'
                ) AS Workflow
        ORDER BY Workflow.workflow_kbn ASC,
                 Workflow.display_order ASC
      ]]>
    </Statement>
  </GetOrderWorkflowSettingAllListForReport>

  <!-- Get top 10 adv code order ranking list -->
  <GetTop10AdvCodeOrderRankingList>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        DECLARE  @total_order_count int
         SELECT  @total_order_count = ISNULL(COUNT(w2_Order.order_id), 0)
           FROM  w2_Order
          WHERE  w2_Order.shop_id = @shop_id
                 [[ ADVERTISING_CODE_ORDERRANKING_SEARCH_WHERE ]]

        DECLARE  @total_order_amount decimal(18,3)
         SELECT  @total_order_amount = ISNULL(SUM(w2_Order.order_price_total), 0)
           FROM  w2_Order
          WHERE  w2_Order.shop_id = @shop_id
                 [[ ADVERTISING_CODE_ORDERRANKING_SEARCH_WHERE ]]

        CREATE TABLE #result_temp
        (
          id int IDENTITY(1, 1),
          advertisement_code nvarchar(30),
          advcode_media_type_name nvarchar(50),
          order_count int,
          order_amount decimal (18,3),
        )

        INSERT  #result_temp
        SELECT  w2_AdvCode.advertisement_code,
                w2_AdvCodeMediaType.advcode_media_type_name,
                ISNULL(COUNT(w2_AdvCode.advertisement_code), 0),
                ISNULL(SUM(w2_Order.order_price_total), 0)
          FROM  w2_AdvCode
                LEFT JOIN w2_AdvCodeMediaType ON
                (
                  w2_AdvCodeMediaType.advcode_media_type_id = w2_AdvCode.advcode_media_type_id
                )
                INNER JOIN w2_Order ON
                (
                  w2_Order.advcode_first = w2_AdvCode.advertisement_code
                )
         WHERE  w2_AdvCode.valid_flg = '1'
           AND  w2_Order.advcode_first = w2_AdvCode.advertisement_code
           AND  w2_Order.shop_id = @shop_id
                [[ ADVERTISING_CODE_ORDERRANKING_SEARCH_WHERE ]]
        GROUP BY w2_AdvCode.advertisement_code,
                 w2_AdvCodeMediaType.advcode_media_type_name

        CREATE TABLE #result
        (
          id int IDENTITY(1, 1),
          advertisement_code nvarchar(30),
          advcode_media_type_name nvarchar(50),
          total_order_count int,
          order_count_rate decimal (18, 1),
          total_order_amount decimal (18, 0),
          order_amount_rate decimal (18, 1)
        )

        INSERT  #result
        SELECT  #result_temp.advertisement_code,
                #result_temp.advcode_media_type_name,
                #result_temp.order_count,
                CASE WHEN ISNULL(@total_order_count, 0) > 0
                  THEN (#result_temp.order_count * 100) / CAST(@total_order_count AS decimal)
                  ELSE 0
                END,
                #result_temp.order_amount,
                CASE WHEN ISNULL(@total_order_amount, 0) > 0
                  THEN (#result_temp.order_amount * 100) / @total_order_amount
                  ELSE 0
                END
          FROM  #result_temp
        GROUP BY #result_temp.advertisement_code,
                 #result_temp.advcode_media_type_name,
                 #result_temp.order_count,
                 #result_temp.order_amount

        SELECT  TOP 10
                #result.*
          FROM  #result
        <@@hasval:orderby_number@@>
        ORDER BY  #result.order_count_rate DESC
        </@@hasval:orderby_number@@>
        <@@hasval:orderby_amount@@>
        ORDER BY  #result.order_amount_rate DESC
        </@@hasval:orderby_amount@@>
      ]]>
    </Statement>
    <Parameter>
      <Input Name="shop_id" Type="nvarchar" Size="10" />
      <Input Name="orderby_number" Type="nvarchar" Size="1" />
      <Input Name="orderby_amount" Type="nvarchar" Size="1" />
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </GetTop10AdvCodeOrderRankingList>

  <!-- Get top 10 product sales ranking list -->
  <GetTop10ProductSalesRankingList>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        CREATE TABLE #result
        (
          id int IDENTITY(1, 1),
          product_id nvarchar(30),
          name nvarchar(100),
          image_head nvarchar(50),
          total_product_count int,
          total_order_amount decimal (18,3),
          shop_id nvarchar(10),
         )

        INSERT  #result
        SELECT  w2_Product.product_id,
                w2_Product.name,
                w2_Product.image_head,
                ISNULL(SUM(w2_OrderItem.item_quantity), 0),
                ISNULL(SUM(w2_OrderItem.item_price), 0),
                @shop_id
          FROM  w2_Product
                INNER JOIN w2_OrderItem ON
                (
                  w2_OrderItem.product_id = w2_Product.product_id
                )
                INNER JOIN w2_Order ON
                (
                  w2_Order.order_id = w2_OrderItem.order_id
                )
         WHERE  w2_Product.shop_id = @shop_id
           AND  w2_Product.valid_flg = '1'
           AND  (
                  @begin_date <= w2_Order.order_date
                  AND
                  w2_Order.order_date < @end_date
                )
           AND  w2_Order.del_flg = '0'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_OrderItem.product_bundle_id = ''
           AND  w2_Product.product_type <> 'FLYER'
        GROUP BY w2_Product.product_id,
                w2_Product.name,
                w2_Product.image_head

        SELECT  TOP 10
                #result.*
          FROM  #result
        <@@hasval:orderby_number@@>
        ORDER BY #result.total_product_count DESC
        </@@hasval:orderby_number@@>
        <@@hasval:orderby_amount@@>
        ORDER BY #result.total_order_amount DESC
        </@@hasval:orderby_amount@@>
      ]]>
    </Statement>
    <Parameter>
      <Input Name="shop_id" Type="nvarchar" Size="10" />
      <Input Name="orderby_number" Type="nvarchar" Size="1" />
      <Input Name="orderby_amount" Type="nvarchar" Size="1" />
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </GetTop10ProductSalesRankingList>

  <!-- Get top 10 product variation sales ranking list -->
  <GetTop10ProductVariationSalesRankingList>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        CREATE TABLE #result
        (
          id int IDENTITY(1, 1),
          product_id nvarchar(30),
          variation_id nvarchar(60),
          name nvarchar(100),
          variation_name1 nvarchar(30),
          variation_name2 nvarchar(30),
          variation_name3 nvarchar(30),
          variation_image_head nvarchar(50),
          total_product_variation_count int,
          total_order_amount decimal (18,3),
          shop_id nvarchar(10),
        )

        INSERT  #result
        SELECT  w2_ProductView.product_id,
                w2_ProductView.variation_id,
                w2_ProductView.name,
                w2_ProductView.variation_name1,
                w2_ProductView.variation_name2,
                w2_ProductView.variation_name3,
                w2_ProductView.variation_image_head,
                ISNULL(SUM(w2_OrderItem.item_quantity), 0),
                ISNULL(SUM(w2_OrderItem.item_price), 0),
                @shop_id
          FROM  w2_ProductView
                INNER JOIN w2_OrderItem ON
                (
                  w2_OrderItem.product_id = w2_ProductView.product_id
                  AND
                  w2_OrderItem.variation_id = w2_ProductView.variation_id
                )
                INNER JOIN w2_Order ON
                (
                  w2_Order.order_id = w2_OrderItem.order_id
                )
         WHERE  w2_ProductView.shop_id = @shop_id
           AND  w2_ProductView.valid_flg = '1'
           AND  (
                  @begin_date <= w2_Order.order_date
                  AND
                  w2_Order.order_date < @end_date
                )
           AND  w2_Order.del_flg = '0'
           AND  w2_Order.return_exchange_kbn = '00'
           AND  w2_OrderItem.product_bundle_id = ''
           AND  w2_ProductView.product_type <> 'FLYER'
        GROUP BY w2_ProductView.product_id,
                w2_ProductView.variation_id,
                w2_ProductView.name,
                w2_ProductView.variation_name1,
                w2_ProductView.variation_name2,
                w2_ProductView.variation_name3,
                w2_ProductView.variation_image_head

        SELECT  TOP 10
                #result.*
          FROM  #result
        <@@hasval:orderby_number@@>
        ORDER BY #result.total_product_variation_count DESC
        </@@hasval:orderby_number@@>
        <@@hasval:orderby_amount@@>
        ORDER BY #result.total_order_amount DESC
        </@@hasval:orderby_amount@@>
      ]]>
    </Statement>
    <Parameter>
      <Input Name="shop_id" Type="nvarchar" Size="10" />
      <Input Name="orderby_number" Type="nvarchar" Size="1" />
      <Input Name="orderby_amount" Type="nvarchar" Size="1" />
      <Input Name="begin_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </GetTop10ProductVariationSalesRankingList>

  <!-- １ヵ月のメール取得してINSERT -->
  <InsertSentMailCountOneMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- レポートをSET
        [[ SELECT_SENT_MAIL_COUNT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]
      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertSentMailCountOneMonth>

  <!-- １ヵ月のメールクリック数取得してINSERT -->
  <InsertMailClickCountOneMonth>
    <Statement>
      <![CDATA[
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

        [[ CREATE_DAY_CALENDAR_TABLE ]]

        [[ BEGIN_PROCESS_CREATE_REPORT_BY_DAY ]]

        -- レポートをSET
        [[ SELECT_MAIL_CLICK_COUNT ]]

        [[ END_PROCESS_CREATE_REPORT_BY_DAY ]]

      ]]>
    </Statement>
    <Parameter>
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="start_date" Type="datetime" />
      <Input Name="end_date" Type="datetime" />
    </Parameter>
  </InsertMailClickCountOneMonth>

  <!-- 今月メール取得MP -->
  <GetSummaryReport>
    <Statement>
      <![CDATA[
        SELECT  SUM (data)
          FROM  w2_SummaryReport
         WHERE  report_date >= @first_date 
           AND  report_date <= @last_date
           AND  data_kbn = @data_kbn
           AND  period_kbn = @period_kbn
      ]]>
    </Statement>
    <Parameter>
      <Input Name="first_date" Type="datetime" />
      <Input Name="last_date" Type="datetime" />
      <Input Name="data_kbn" Type="nvarchar" Size="10" />
      <Input Name="period_kbn" Type="nvarchar" Size="2" />
    </Parameter>
  </GetSummaryReport>
</SummaryReport>
